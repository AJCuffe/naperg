# import Mutation.createPost, Mutation.createChat, Query.chatsConnection, Query.chat, Query.carsConnection, Query.usersConnection, Query.car, Mutation.deleteCar, Query.user, Mutation.updateUser from "./generated/prisma.graphql"
# import Car, CarCreateInput, CarWhereInput, CarOrderByInput from "./generated/prisma.graphql"
# import Post, User, Subscription.chat from "./generated/prisma.graphql"

type Query {
  me: User
  feed: [Post!]!
  drafts(orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]!
  post(id: ID!): Post
}

type Mutation {
  signup(email: String!, password: String!, name: String!, nameFile: String!): AuthPayload!
  resetPassword(password: String!, resetPasswordToken: String!): AuthPayload!
  sendLinkValidateEmail: User!
  validateEmail(validateEmailToken: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  deletePost(id: ID!): Post
  deleteUser(id: ID!): User
  publish(id: ID!): Post
  createCar(data: CarCreateInput!): Car!
  updateCar(data: CarUpdateInput!, where: CarWhereUniqueInput!): Car
  updatePassword(oldPassword: String, newPassword: String!): User!
  forgetPassword(email: String!): User!
}

type AuthPayload {
  token: String!
  user: User!
}
