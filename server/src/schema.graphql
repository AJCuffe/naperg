# import Post, Car from "./generated/prisma.graphql"

type Query {
  me: User
  feed: [Post!]!
  drafts: [Post!]!
  users: [User!]!
  singleUser(id: ID!): User
  post(id: ID!): Post
  car(id: ID!): Car
  cars: [Car!]!


  # Only admins can retrieve info about given users
  user(id: ID!): User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String, nameFile: String): Post
  deletePost(id: ID!): Post
  deleteUser(id: ID!): User
  publish(id: ID!): Post

  createCar(data: CarCreateInput!): Car!
  deleteCar(where: CarWhereUniqueInput!): Car
  updateCar(data: CarUpdateInput!, where: CarWhereUniqueInput!): Car

  # Users can only update their own passwords
  # if `userId` is set, the user trying to update the password needs to be an admin
  updatePassword(oldPassword: String, newPassword: String!, userId: ID): User!

}

type AuthPayload {
  token: String!
  user: User!
}
